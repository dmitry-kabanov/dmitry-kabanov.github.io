<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Website of Dmitry Kabanov</title>
    <link>https://dmitrykabanov.com/tags/c/</link>
    <description>Recent content in C on Website of Dmitry Kabanov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://dmitrykabanov.com/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>“Modern C”: Notes on chapter 7 “Functions”</title>
      <link>https://dmitrykabanov.com/blog/2024/notes-on-chapter-07-modern-c/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2024/notes-on-chapter-07-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 7&#xA;&amp;ldquo;Functions&amp;rdquo;&#xA;from the book &lt;a href=&#34;https://www.manning.com/books/modern-c&#34;&gt;&amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;This chapter discusses structuring C program using functions; particularly,&#xA;attention is given to recursion, that is, to the ability of C functions&#xA;to invoke themselves.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 6 “Derived data types”</title>
      <link>https://dmitrykabanov.com/blog/2024/notes-on-chapter-06-modern-c/</link>
      <pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2024/notes-on-chapter-06-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 6&#xA;&amp;ldquo;Derived data types&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&lt;/p&gt;&#xA;&lt;p&gt;This chapter discusses objects that consist of other objects, such as arrays,&#xA;pointers, structures, and type aliases.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to avoid subtle bugs in malloc usage in C</title>
      <link>https://dmitrykabanov.com/blog/2024/how-to-avoid-subtle-bugs-in-malloc/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2024/how-to-avoid-subtle-bugs-in-malloc/</guid>
      <description>&lt;p&gt;Whenever a computer program needs to store data of the size determined only&#xA;during the runtime, then dynamic memory allocation is required.&#xA;Memory allocation happens in the &lt;em&gt;memory heap&lt;/em&gt;, and in C is commonly done&#xA;via a library function &lt;code&gt;malloc&lt;/code&gt;, which has subtle things with its usage&#xA;that I would like to discuss here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 5 “Basic values and data”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-chapter-05-modern-c/</link>
      <pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-chapter-05-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 5&#xA;&amp;ldquo;Basic values and data&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&lt;/p&gt;&#xA;&lt;p&gt;This chapter discusses values of different objects&#xA;that are used in a C program,&#xA;and how they are represented.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Array and pointers equivalence myth</title>
      <link>https://dmitrykabanov.com/blog/2023/array-decay-to-pointer-in-c/</link>
      <pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/array-decay-to-pointer-in-c/</guid>
      <description>&lt;p&gt;I&amp;rsquo;d like to share some knowledge about subtle thing that I have learned&#xA;recently in C.&#xA;It is related to the relations between arrays and pointers, and how they&#xA;are often treated as equivalent to each other (for example, this is how&#xA;passing an array to a function works when one of the expected arguments&#xA;is a pointer).&#xA;However, arrays and pointers are not equivalent to each other.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 4 “Expressing computations”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-chapter-04-modern-c/</link>
      <pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-chapter-04-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 4&#xA;&amp;ldquo;Expressing computations&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&lt;/p&gt;&#xA;&lt;p&gt;This chapter discusses expressions, that is, computations based&#xA;on some values, such as variables and literals.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 3 “Everything is about control”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-chapter-03-modern-c/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-chapter-03-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 3&#xA;&amp;ldquo;Everything is about control&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&#xA;This chapter explains five control block statements:&#xA;conditional statements with &lt;code&gt;if&lt;/code&gt;, loops with &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;do-while&lt;/code&gt;,&#xA;and selection statements with &lt;code&gt;switch&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on preamble “Level 1 Aquaintance”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-preamble-level-1-modern-c/</link>
      <pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-preamble-level-1-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading the preamble for the part&#xA;&amp;ldquo;Level 1. Aquaintance&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&#xA;This preamble introduces stylistic decisions that&#xA;the author uses in the rest of the book.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 2 “The principal structure of a program”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-chapter-02-modern-c/</link>
      <pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-chapter-02-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 2&#xA;&amp;ldquo;The principal structure of a program&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&#xA;This chapter explains details of C grammar, distinction between declaration&#xA;and definition of objects, and statements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on chapter 1 “Getting started”</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-ch01-modern-c/</link>
      <pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-ch01-modern-c/</guid>
      <description>&lt;p&gt;These are my notes taken while reading chapter 1 &amp;ldquo;Getting Started&amp;rdquo;&#xA;from the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt.&#xA;This chapter introduces imperative programming and teaches how to compile&#xA;and run a C program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Modern C”: Notes on the book by Jens Gustedt</title>
      <link>https://dmitrykabanov.com/blog/2023/notes-on-modern-c/</link>
      <pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://dmitrykabanov.com/blog/2023/notes-on-modern-c/</guid>
      <description>&lt;p&gt;These are the table of contents for my notes taken&#xA;while reading the book &amp;ldquo;Modern C&amp;rdquo; by Jens Gustedt,&#xA;which teaches C according to new language standards, C11 and C17.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
